{"version":3,"sources":["components/Login/Login.module.scss","components/Loader/Loader.module.scss","components/Loader/Loader.tsx","utils/constants/constants.js","routes/routes.ts","components/Login/Login.tsx","components/Chat/Chat.tsx","components/AppRoute.tsx","services/changeCssVariables.js","services/storage.js","context/ThemeProvider.js","components/Navbar/Navbar.tsx","App.tsx","index.tsx","components/Chat/Chat.module.scss"],"names":["module","exports","Loader","props","className","style","loader__container","size","LOGIN_ROUTE","CHAT_ROUTE","publicRoutes","path","Element","auth","useContext","Context","login","a","provider","firebase","GoogleAuthProvider","signInWithPopup","login__container","login__form","onClick","type","privateRoutes","firestore","useAuthState","user","useCollectionData","collection","orderBy","messages","loading","useState","value","setValue","error","setError","chat__container","chat__title","chat","chat__boxWrapper","map","message","index","row","span","chat__person","src","photoUrl","person__name","displayName","classNames","chat__text","uid","chat__interlocutor","text","chat__time","Date","createdAt","seconds","toLocaleTimeString","hour","minute","chat__input","placeholder","onChange","e","target","emptyInput","undefined","onKeyPress","add","photoURL","FieldValue","serverTimestamp","AppRoute","navigate","useNavigate","useEffect","element","changeCssVariables","theme","root","document","querySelector","setProperty","storage","name","item","localStorage","setItem","JSON","stringify","getItem","parse","LIGHT_THEME","DARK_THEME","ThemeContext","createContext","ThemeProvider","children","setTheme","Provider","changeTheme","Navbar","isTheme","checkedTheme","setCheckedTheme","mode","display","justifyContent","backgroundColor","Item","signOut","to","color","defaultChecked","App","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","StrictMode","basename","getElementById"],"mappings":"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","file":"static/js/main.df2780ae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login__container\":\"Login_login__container__2XI_u\",\"login__form\":\"Login_login__form__GAZY_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader__container\":\"Loader_loader__container__3atXp\"};","import React from 'react'\nimport { Spin } from 'antd'\nimport style from './Loader.module.scss'\n\ninterface Props {\n    \n}\n\nexport const Loader = (props: Props) => {\n    return (\n        <div className={style.loader__container}>\n            <Spin size='large' />\n        </div>\n    )\n}\n","export const LOGIN_ROUTE = '/login'\nexport const CHAT_ROUTE = '/chat'","import { Chat } from '../components/Chat/Chat'\nimport { Login } from '../components/Login/Login'\nimport { CHAT_ROUTE, LOGIN_ROUTE } from '../utils/constants/constants'\nimport { RouteProps } from 'react-router'\n\ntype consts = {\n  path: RouteProps['path']\n  Element: RouteProps['children']\n}\n\nexport const publicRoutes: consts[] = [\n  {\n    path: LOGIN_ROUTE,\n    Element: Login,\n  },\n]\n\nexport const privateRoutes = [\n  {\n    path: CHAT_ROUTE,\n    Element: Chat,\n  },\n]\n","import React, { useContext } from 'react'\nimport { Button } from 'antd'\nimport style from './Login.module.scss'\nimport { Context } from '../../index'\nimport firebase from 'firebase/compat/app';\n\ninterface Props {}\n\nexport const Login = (props: Props) => {\n\n    const { auth } = useContext(Context)\n\n    const login = async () => {\n        const provider = new firebase.auth.GoogleAuthProvider()\n        await auth.signInWithPopup(provider)\n    }\n\n  return (\n    <div className={style.login__container}>\n      <div className={style.login__form}>\n        <h2>Login</h2>\n        <Button onClick={login} type='primary'>Войти с помощью Google</Button>\n      </div>\n    </div>\n  )\n}\n","import React, { useContext, useState } from 'react'\nimport { Avatar, Button, Col, Input, Row } from 'antd'\nimport style from './Chat.module.scss'\nimport { Context } from '../..'\nimport { useAuthState } from 'react-firebase-hooks/auth'\nimport { useCollectionData } from 'react-firebase-hooks/firestore'\nimport firebase from 'firebase/compat/app'\nimport { Loader } from '../Loader/Loader'\nimport classNames from 'classnames'\n\nexport const Chat = () => {\n  const { auth, firestore } = useContext(Context)\n  const [user] = useAuthState(auth)\n  const [messages, loading] = useCollectionData(\n    firestore.collection('messages').orderBy('createdAt')\n  )\n  const [value, setValue] = useState('')\n  const [error, setError] = useState(false)\n\n  const sendMessage = () => {\n    if (value) {\n      firestore.collection('messages').add({\n        uid: user?.uid,\n        displayName: user?.displayName,\n        photoUrl: user?.photoURL,\n        text: value,\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      })\n      setError(false)\n      setValue('')\n    } else {\n      setError(true)\n    }\n  }\n\n  if (loading) {\n    return <Loader />\n  }\n\n  return (\n    <div className={style.chat__container}>\n      <h1 className={style.chat__title}>Chat</h1>\n      <div className={style.chat}>\n        <div className={style.chat__boxWrapper}>\n          {messages?.map((message, index: number) => (\n            <Row key={index} className={style.row}>\n              <Col span={24}>\n                <div className={style.chat__person}>\n                  <Avatar src={message.photoUrl} size={42} />\n                  <p className={style.person__name}>{message.displayName}</p>\n                </div>\n                <p\n                  className={classNames(\n                    style.chat__text,\n                    user?.uid === message.uid\n                      ? style.chat__text\n                      : style.chat__interlocutor\n                  )}\n                >\n                  {message.text}\n                </p>\n                <span className={style.chat__time}>\n                  {new Date(\n                    message?.createdAt?.seconds * 1000\n                  ).toLocaleTimeString([], {\n                    hour: '2-digit',\n                    minute: '2-digit',\n                  })}\n                </span>\n              </Col>\n            </Row>\n          ))}\n        </div>\n        <div className={style.chat__input}>\n          <Input\n            placeholder=\"Введите сообщение\"\n            value={value}\n            onChange={(e) => setValue(e.target.value)}\n            className={error ? style.emptyInput : undefined}\n            onKeyPress={() => setError(false)}\n          />\n          <Button onClick={sendMessage} type=\"primary\">\n            Отправить\n          </Button>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useContext, useEffect } from 'react'\nimport { Route, Routes, useNavigate } from 'react-router-dom'\nimport { privateRoutes, publicRoutes } from '../routes/routes'\nimport { CHAT_ROUTE, LOGIN_ROUTE } from '../utils/constants/constants'\nimport { useAuthState } from 'react-firebase-hooks/auth'\nimport { Context } from '..'\n\nexport const AppRoute = () => {\n  const navigate = useNavigate()\n  const { auth } = useContext(Context)\n  const [user] = useAuthState(auth)\n\n  useEffect(() => {\n      if(user){\n        navigate(CHAT_ROUTE)\n      }else{\n        navigate(LOGIN_ROUTE)\n      }\n  }, [user, navigate])\n\n  return user ? (\n    <Routes>\n      {privateRoutes.map(({ path, Element }: any, index) => (\n        <Route key={index} path={path} element={<Element />} />\n      ))}\n    </Routes>\n  ) : (\n    <Routes>\n      {publicRoutes.map(({ path, Element }: any, index) => (\n        <Route key={index} path={path} element={<Element />} />\n      ))}\n    </Routes>\n  )\n}\n","export const changeCssVariables = (theme) => {\n    const root = document.querySelector(':root')\n    const cssVariables = ['header', 'background', 'chat__text']\n\n    cssVariables.map((element) => {\n        root.style.setProperty(\n            `--theme-default-${element}`,\n            `var(--theme-${theme}-${element})`\n        )\n    })\n}","export const storage = {\n  setItem: (name, item) => {\n    localStorage.setItem(name, JSON.stringify(item))\n  },\n  getItem: (name) => {\n    const item = localStorage.getItem(name)\n    if (item) {\n      return JSON.parse(item)\n    }\n  },\n}\n","import { createContext, useContext, useState } from \"react\"\nimport { changeCssVariables } from \"../services/changeCssVariables\"\nimport { storage } from \"../services/storage\"\n\nexport const LIGHT_THEME = 'light'\nexport const DARK_THEME = 'dark'\n\nconst ThemeContext = createContext()\n\nconst ThemeProvider = ({ children, ...props }) => {\n    const [theme, setTheme] = useState(storage.getItem('theme') || LIGHT_THEME)\n\n    changeCssVariables(theme)\n    const changeTheme = (theme) => {\n        changeCssVariables(theme)\n        setTheme(theme)\n        storage.setItem('theme', theme)\n    }\n\n    return(\n        <ThemeContext.Provider value={{changeTheme, theme}}{...props}>\n            {children}\n        </ThemeContext.Provider>\n    )\n}\n\nexport default ThemeProvider\n\nexport const useTheme = () => useContext(ThemeContext)","import React, { useContext, useState } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { Menu, Switch } from 'antd'\nimport 'antd/dist/antd.css'\nimport { LOGIN_ROUTE } from '../../utils/constants/constants'\nimport { useAuthState } from 'react-firebase-hooks/auth'\nimport { Context } from '../..'\nimport { DARK_THEME, LIGHT_THEME, useTheme } from '../../context/ThemeProvider'\nimport { storage } from '../../services/storage'\n\ninterface Props {}\n\nexport const Navbar = (props: Props) => {\n  const { auth } = useContext(Context)\n  const [user] = useAuthState(auth)\n  const isTheme = useTheme()\n\n  const [checkedTheme, setCheckedTheme] = useState(storage.getItem('checkedTheme') || false)\n\n  storage.setItem('checkedTheme', checkedTheme)\n\n  const handlerTheme = () => {\n    if(isTheme.theme === LIGHT_THEME){\n      isTheme.changeTheme(DARK_THEME)\n      setCheckedTheme(true)\n    }else if(isTheme.theme === DARK_THEME){\n      isTheme.changeTheme(LIGHT_THEME)\n      setCheckedTheme(false)\n    }\n  }\n\n  return (\n    <Menu\n      mode=\"horizontal\"\n      style={{ display: 'flex', justifyContent: 'flex-end', backgroundColor: 'var(--theme-default-background)'}}\n    >\n      {user ? (\n          <Menu.Item key='SignOut' onClick={() => auth.signOut()}>\n            <NavLink to=\"\" style={{ color: 'var(--theme-default-header)'}} >\n              Выйти\n            </NavLink>\n          </Menu.Item>\n      ) : (\n          <Menu.Item key='SignIn'>\n            <NavLink to={LOGIN_ROUTE} style={{ color: 'var(--theme-default-header)' }}>\n              Войти\n            </NavLink>\n          </Menu.Item>\n      )}\n      <Menu.Item>\n        <Switch defaultChecked={checkedTheme} onChange={handlerTheme} />\n      </Menu.Item>\n    </Menu>\n  )\n}\n","import React, { useContext } from 'react'\nimport { AppRoute } from './components/AppRoute'\nimport { Navbar } from './components/Navbar/Navbar'\nimport { useAuthState } from 'react-firebase-hooks/auth'\nimport { Loader } from './components/Loader/Loader'\nimport { Context } from './index'\nimport './App.scss'\n\nconst App = () => {\n  const { auth } = useContext(Context)\n  const [user, loading, error] = useAuthState(auth)\n  \n  if(loading){\n    return <Loader />\n  }\n\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <AppRoute />\n    </div>\n  )\n}\n\nexport default App\n","import React, { createContext } from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './App'\nimport './index.css'\nimport firebase from 'firebase/compat/app'\nimport 'firebase/compat/auth'\nimport 'firebase/compat/firestore'\nimport ThemeProvider from './context/ThemeProvider'\n\nfirebase.initializeApp({\n  apiKey: 'AIzaSyCTdUK8ry-fIV0XP88xSy_JUUpHD-dQqt4',\n  authDomain: 'chat-app-717e2.firebaseapp.com',\n  projectId: 'chat-app-717e2',\n  storageBucket: 'chat-app-717e2.appspot.com',\n  messagingSenderId: '214754581800',\n  appId: '1:214754581800:web:ddcd0111c0639b9f49c41d',\n  measurementId: 'G-NXC6F14MSZ',\n})\n\nconst auth = firebase.auth()\nconst firestore = firebase.firestore()\n\nexport const Context = createContext<any>(null)\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider>\n      <Context.Provider value={{ firebase, auth, firestore }}>\n        <BrowserRouter basename='/reactChat/'>\n          <App />\n        </BrowserRouter>\n      </Context.Provider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat__container\":\"Chat_chat__container__362OX\",\"chat__title\":\"Chat_chat__title__3edtP\",\"chat\":\"Chat_chat__i58WX\",\"chat__boxWrapper\":\"Chat_chat__boxWrapper__Hbi4T\",\"row\":\"Chat_row__1o5zY\",\"chat__person\":\"Chat_chat__person__2RBLb\",\"person__name\":\"Chat_person__name__32pAv\",\"chat__text\":\"Chat_chat__text__1gMfF\",\"chat__time\":\"Chat_chat__time__3-NNf\",\"chat__interlocutor\":\"Chat_chat__interlocutor__18Q7t\",\"chat__input\":\"Chat_chat__input__W2-xA\",\"emptyInput\":\"Chat_emptyInput__3_--P\"};"],"sourceRoot":""}